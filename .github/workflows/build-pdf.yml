# This workflow installs dependencies for PDF generation, generates the PDF,
# and uploads the PDF as an artifact.

name: Build Document PDF

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    outputs:
      name:
        description: "The base name of the pdf file (without .pdf extensions)"
        value: ${{ jobs.build.outputs.name }}
      pdf-name:
        description: "The name of the pdf file (with .pdf extensions)"
        value: ${{ jobs.build.outputs.pdf-name }}

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NAME: riscv-ap-tee
      APT_PACKAGES_FILE: ${{ github.workspace }}/dependencies/apt_packages.txt
      BUNDLE_GEMFILE: ${{ github.workspace }}/dependencies/Gemfile
      BUNDLE_BIN: ${{ github.workspace }}/bin
      NPM_PACKAGE_FOLDER: ${{ github.workspace }}/dependencies
    outputs:
      name: ${{ steps.step1.outputs.name }}
      pdf-name: ${{ steps.step2.outputs.pdf-name }}
    steps:
    - name: Set outputs.name
      id: step1
      run: echo "name=$NAME" >> $GITHUB_OUTPUT
    - name: Set outputs.pdf-name
      id: step2
      run: echo "pdf-name=./specification/$NAME.pdf" >> $GITHUB_OUTPUT
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'true'
    - name: Install Ubuntu packages
      run: |
        sudo apt-get update
        grep -vE '^#' ${APT_PACKAGES_FILE} | xargs sudo apt-get install --yes --no-install-recommends
    # Ruby for asciidoctor
    - name: Setup Ruby and Gemfile content
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "3.1"
        bundler-cache: true
    # Node.js for wavedrom
    - uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install Node.js dependencies
      run: npm install ${NPM_PACKAGE_FOLDER}
    - name: Generate PDF
      run: |
        PATH=${PATH}:${BUNDLE_BIN}:$(npm bin) \
        PDF_RESULT=${{ env.NAME }}.pdf \
        make -C specification
    - name: Archive PDF result
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.NAME }}.pdf
        path: ./specification/${{ env.NAME }}.pdf
        retention-days: 7
